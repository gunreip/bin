#!/usr/bin/env bash
set -euo pipefail
SCRIPT_VERSION="v1.0.0"

REPO_PATH=""
ENFORCE=0
SUITE=""
CUSTOM_CMD=""

while [[ $# -gt 0 ]]; do
  case "$1" in
    -p) REPO_PATH="${2:-}"; shift 2 ;;
    --enforce) ENFORCE=1; shift ;;
    --suite) SUITE="${2:-}"; shift 2 ;;
    --cmd) CUSTOM_CMD="${2:-}"; shift 2 ;;
    --version) echo "prepush_install.sh $SCRIPT_VERSION"; exit 0 ;;
    *) echo "Unbekannter Parameter: $1" >&2; exit 2 ;;
  esac
done

if [[ -z "${REPO_PATH}" ]]; then REPO_PATH="$(pwd)"; fi
if [[ ! -d "$REPO_PATH/.git" ]]; then
  echo "❌ Kein Git-Repository unter: $REPO_PATH" >&2
  exit 2
fi

# Ermittele hooksPath
HOOKS_PATH="$(git -C "$REPO_PATH" config --get core.hooksPath || true)"
if [[ -z "${HOOKS_PATH}" ]]; then
  HOOKS_PATH="$REPO_PATH/.git/hooks"
fi
mkdir -p "$HOOKS_PATH"

HOOK_FILE="$HOOKS_PATH/pre-push"
TS="$(date +%Y-%m-%d_%H:%M:%S)"

cat > "$HOOK_FILE" <<'HOOK'
#!/usr/bin/env bash
set -euo pipefail
# Auto-generated by prepush_install.sh
HOOK

# dynamische Variablen anhängen
{
  printf 'REPO_PATH=%q\n' "$REPO_PATH"
  printf 'ENFORCE=%q\n' "$ENFORCE"
  printf 'SUITE=%q\n' "$SUITE"
  printf 'CUSTOM_CMD=%q\n' "$CUSTOM_CMD"
  printf 'TS=%q\n' "$TS"
  cat <<'HOOK_BODY'

cd "$REPO_PATH"

phpunit_bin="vendor/bin/phpunit"
if [[ ! -x "$phpunit_bin" ]]; then
  if [[ "$ENFORCE" == "1" ]]; then
    echo "[pre-push] phpunit nicht gefunden ($phpunit_bin). Push abgebrochen (enforce)." >&2
    exit 1
  else
    echo "[pre-push] phpunit nicht gefunden – überspringe Tests (soft mode)." >&2
    exit 0
  fi
fi

run_phpunit() {
  local args=("$@")
  echo "[pre-push] phpunit ${args[*]}"
  if "$phpunit_bin" "${args[@]}"; then
    echo "[pre-push] phpunit: OK"
    return 0
  else
    echo "[pre-push] phpunit: FAIL" >&2
    return 1
  fi
}

# Falls eigene Argumente vorgegeben sind, die direkt verwenden
if [[ -n "$CUSTOM_CMD" ]]; then
  # shellcheck disable=SC2086
  eval "$phpunit_bin $CUSTOM_CMD"
  exit $?
fi

# Falls Suite explizit angegeben ist
if [[ -n "$SUITE" ]]; then
  run_phpunit --testsuite "$SUITE" || exit 1
  exit 0
fi

# Versuche 'unit'-Suite zu erkennen
if "$phpunit_bin" --list-suites 2>/dev/null | grep -Eiq '(^|[[:space:]])unit([[:space:]]|$)'; then
  run_phpunit --testsuite unit || exit 1
  exit 0
fi

# Fallback: alle Tests
run_phpunit || exit 1

HOOK_BODY
} >> "$HOOK_FILE"

chmod +x "$HOOK_FILE"

echo "✅ pre-push Hook installiert unter: $HOOK_FILE"
echo "   Modus: $([[ $ENFORCE -eq 1 ]] && echo enforce || echo soft)  |  Suite: ${SUITE:-(auto)}"
